| package |
package := Package name: 'Willow-Bootstrap-4-Tests'.
package paxVersion: 1;
	basicComment: 'Willow for Dolphin Smalltalk 7.1

Willow is a Web Interaction Library that eases the burden of creating AJAX-based web applications.

Willow and associated frameworks created by Buenos Aires Smalltalk
https://github.com/ba-st

Dolphin Smalltalk port by John Aspinall, May 2020.

Willow v13.0.0
Willow Bootstrap v12.0.0
Willow Spinkit v8.0.0
RenoirSt v7.0.0
Boardwalk v5.0.0
Buoy v5.0.0'.


package classNames
	add: #Bootstrap4CardBuilderTest;
	add: #Bootstrap4CardLayoutBuilderTest;
	add: #Bootstrap4CheckboxWebViewTest;
	add: #Bootstrap4ComponentSupplierTest;
	add: #Bootstrap4DeploymentMetadataLibraryTest;
	add: #Bootstrap4DevelopmentMetadataLibraryTest;
	add: #Bootstrap4DialogClosingCommandTest;
	add: #Bootstrap4FieldAddonBuilderTest;
	add: #Bootstrap4GridBuilderTest;
	add: #Bootstrap4LabeledWebViewTest;
	add: #Bootstrap4MetadataLibraryTest;
	add: #Bootstrap4ModalBuilderTest;
	add: #Bootstrap4NavigationDropdownMenuBuilderTest;
	add: #Bootstrap4OnlineLibraryTest;
	add: #Bootstrap4PanelBuilderTest;
	add: #Bootstrap4RadioWebViewTest;
	add: #Bootstrap4SingleButtonDropdownBuilderTest;
	add: #Bootstrap4SplitButtonDropdownBuilderTest;
	add: #Bootstrap4ToggablePillsBuilderTest;
	add: #Bootstrap4ToggableTabsBuilderTest;
	add: #WillowBootstrap4ApplicationTest;
	yourself.

package methodNames
	add: #BootstrapAlertCommandTest -> #testApplyBootstrap4;
	add: #BootstrapCollapseTest -> #testDispose;
	add: #BootstrapModalTest -> #testDispose;
	add: #BootstrapModalTest -> #testFocus;
	add: #BootstrapNotificationBuilderTest -> #testDark;
	add: #BootstrapNotificationBuilderTest -> #testLight;
	add: #BootstrapNotificationBuilderTest -> #testPrimary;
	add: #BootstrapNotificationBuilderTest -> #testSecondary;
	add: #BootstrapPopoverTest -> #testBoundary;
	add: #BootstrapPopoverTest -> #testDisable;
	add: #BootstrapPopoverTest -> #testDispose;
	add: #BootstrapPopoverTest -> #testEnable;
	add: #BootstrapPopoverTest -> #testFallbackPlacement;
	add: #BootstrapPopoverTest -> #testFallbackPlacementWithArray;
	add: #BootstrapPopoverTest -> #testOffset;
	add: #BootstrapPopoverTest -> #testTemplateForBootstrap4;
	add: #BootstrapPopoverTest -> #testToggleEnabled;
	add: #BootstrapPopoverTest -> #testUpdate;
	add: #BootstrapTooltipTest -> #testBoundary;
	add: #BootstrapTooltipTest -> #testDisable;
	add: #BootstrapTooltipTest -> #testDispose;
	add: #BootstrapTooltipTest -> #testEnable;
	add: #BootstrapTooltipTest -> #testFallbackPlacement;
	add: #BootstrapTooltipTest -> #testFallbackPlacementWithArray;
	add: #BootstrapTooltipTest -> #testOffset;
	add: #BootstrapTooltipTest -> #testTemplateForBootstrap4;
	add: #BootstrapTooltipTest -> #testToggleEnabled;
	add: #BootstrapTooltipTest -> #testUpdate;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'Boardwalk-SUnit'
	'Buoy-Assertions'
	'..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\Seaside\Seaside\Seaside-Canvas'
	'..\Core\Contributions\Camp Smalltalk\SUnit\SUnit'
	'Willow-Bootstrap'
	'Willow-Bootstrap-4'
	'Willow-Bootstrap-Tests'
	'Willow-Core'
	'Willow-Tests').

package!

"Class Definitions"!

TestCase subclass: #Bootstrap4MetadataLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase subclass: #Bootstrap4OnlineLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4CardBuilderTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4CardLayoutBuilderTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4DeploymentMetadataLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4DevelopmentMetadataLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4FieldAddonBuilderTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4GridBuilderTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4LabeledWebViewTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4NavigationDropdownMenuBuilderTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4PanelBuilderTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4SingleButtonDropdownBuilderTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4SplitButtonDropdownBuilderTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4ToggablePillsBuilderTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BWRenderingTest subclass: #Bootstrap4ToggableTabsBuilderTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BinaryChoiceWebViewTest subclass: #Bootstrap4CheckboxWebViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BootstrapComponentSupplierTest subclass: #Bootstrap4ComponentSupplierTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BootstrapDialogClosingCommandTest subclass: #Bootstrap4DialogClosingCommandTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BootstrapModalBuilderTest subclass: #Bootstrap4ModalBuilderTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SingleSelectionWebViewTest subclass: #Bootstrap4RadioWebViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
WillowBootstrapApplicationTest subclass: #WillowBootstrap4ApplicationTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!BootstrapAlertCommandTest methodsFor!

testApplyBootstrap4	| html |	html := self apply: BootstrapAlertCommand light toComponentDefinedBy: [ :canvas | canvas div ].	self assert: html equals: '<div class="alert alert-light" role="alert"></div>'.	html := self apply: BootstrapAlertCommand dark toComponentDefinedBy: [ :canvas | canvas div ].	self assert: html equals: '<div class="alert alert-dark" role="alert"></div>'.	html := self apply: BootstrapAlertCommand primary toComponentDefinedBy: [ :canvas | canvas div ].	self assert: html equals: '<div class="alert alert-primary" role="alert"></div>'.	html := self apply: BootstrapAlertCommand secondary toComponentDefinedBy: [ :canvas | canvas div ].	self assert: html equals: '<div class="alert alert-secondary" role="alert"></div>'! !
!BootstrapAlertCommandTest categoriesFor: #testApplyBootstrap4!*Willow/Bootstrap/4/Tests!public! !

!BootstrapCollapseTest methodsFor!

testDispose	| html |	html := self renderCollapsibleContentApplying: [ :collapse | collapse dispose ].	self assert: html equals: '<div id="id1"></div><script type="text/javascript">$("#id1").collapse("dispose");</script>'! !
!BootstrapCollapseTest categoriesFor: #testDispose!*Willow/Bootstrap/4/Tests!public! !

!BootstrapModalTest methodsFor!

testDispose	| html |	html := self renderModalContentApplying: [ :modal | modal dispose ].	self		assert: html		equals:			'<div class="modal" id="id1"></div><script type="text/javascript">$("#id1").modal("dispose");</script>'!

testFocus	| html |	html := self renderModalContentApplying: [ :modal | modal focus: false ].	self		assert: html		equals:			'<div class="modal" id="id1"></div><script type="text/javascript">$("#id1").modal({"focus":false});</script>'! !
!BootstrapModalTest categoriesFor: #testDispose!*Willow/Bootstrap/4/Tests!public! !
!BootstrapModalTest categoriesFor: #testFocus!*Willow/Bootstrap/4/Tests!public! !

!BootstrapNotificationBuilderTest methodsFor!

testDark	| notification html |	notification := BootstrapNotificationBuilder new		dark;		buildApplying: [ :container |  ].	html := self render: notification.	self assert: html equals: '<div class="alert alert-dark" role="alert"></div>'!

testLight	| notification html |	notification := BootstrapNotificationBuilder new		light;		buildApplying: [ :container |  ].	html := self render: notification.	self assert: html equals: '<div class="alert alert-light" role="alert"></div>'!

testPrimary	| notification html |	notification := BootstrapNotificationBuilder new		primary;		buildApplying: [ :container |  ].	html := self render: notification.	self assert: html equals: '<div class="alert alert-primary" role="alert"></div>'!

testSecondary	| notification html |	notification := BootstrapNotificationBuilder new		secondary;		buildApplying: [ :container |  ].	html := self render: notification.	self assert: html equals: '<div class="alert alert-secondary" role="alert"></div>'! !
!BootstrapNotificationBuilderTest categoriesFor: #testDark!*Willow/Bootstrap/4/Tests!public! !
!BootstrapNotificationBuilderTest categoriesFor: #testLight!*Willow/Bootstrap/4/Tests!public! !
!BootstrapNotificationBuilderTest categoriesFor: #testPrimary!*Willow/Bootstrap/4/Tests!public! !
!BootstrapNotificationBuilderTest categoriesFor: #testSecondary!*Willow/Bootstrap/4/Tests!public! !

!BootstrapPopoverTest methodsFor!

testBoundary	| html |	html := self		renderPopoverContentApplying: [ :popover | popover boundary: #scrollParent].	self		assert: html		equals:			'<div id="id1"></div><script type="text/javascript">$("#id1").popover({"boundary":"scrollParent"});</script>'!

testDisable	| html |	html := self renderPopoverContentApplying: [ :popover | popover disable ].	self assert: html equals: '<div id="id1"></div><script type="text/javascript">$("#id1").popover("disable");</script>'!

testDispose	| html |	html := self renderPopoverContentApplying: [ :popover | popover dispose ].	self assert: html equals: '<div id="id1"></div><script type="text/javascript">$("#id1").popover("dispose");</script>'!

testEnable	| html |	html := self renderPopoverContentApplying: [ :popover | popover enable ].	self assert: html equals: '<div id="id1"></div><script type="text/javascript">$("#id1").popover("enable");</script>'!

testFallbackPlacement	| html |	html := self renderPopoverContentApplying: [ :popover | popover fallbackPlacement: #flip ].	self assert: html equals: '<div id="id1"></div><script type="text/javascript">$("#id1").popover({"fallbackPlacement":"flip"});</script>'!

testFallbackPlacementWithArray	| html |	html := self		renderPopoverContentApplying: [ :popover | popover fallbackPlacement: #(#flip #clockwise) ].	self		assert: html		equals:			'<div id="id1"></div><script type="text/javascript">$("#id1").popover({"fallbackPlacement":["flip","clockwise"]});</script>'!

testOffset	| html |	html := self renderPopoverContentApplying: [ :popover | popover offset: 1 ].	self assert: html equals: '<div id="id1"></div><script type="text/javascript">$("#id1").popover({"offset":1});</script>'!

testTemplateForBootstrap4	| html |	html := self		renderUsing: [ :canvas | 			| div popover |			div := canvas div.			popover := canvas jQuery new bootstrapPopover.			popover				template: [ :template | 					template div						with: [ template div apply: [ :container | container addClass bootstrapCommon arrow ].							template								render:									( HeadingWebView										displaying: ''										withLevel: 3										applying: [ :container | container addClass bootstrap4 popoverHeader ] ).							template div								with: 'Body'								applying: [ :container | container addClass bootstrap4 popoverBody ]							]						applying:							[ :container :constants | container addClass bootstrapCommon popover + ( container setARIARoleTo: #tooltip ) ]					].			div script: popover			].	self		assert: html		equals:			'<div id="id1"></div><script type="text/javascript">$("#id1").popover({"template":"<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\">Body</div></div>"});</script>'!

testToggleEnabled	| html |	html := self renderPopoverContentApplying: [ :popover | popover toggleEnabled ].	self assert: html equals: '<div id="id1"></div><script type="text/javascript">$("#id1").popover("toggleEnabled");</script>'!

testUpdate	| html |	html := self renderPopoverContentApplying: [ :popover | popover update ].	self assert: html equals: '<div id="id1"></div><script type="text/javascript">$("#id1").popover("update");</script>'! !
!BootstrapPopoverTest categoriesFor: #testBoundary!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testDisable!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testDispose!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testEnable!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testFallbackPlacement!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testFallbackPlacementWithArray!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testOffset!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testTemplateForBootstrap4!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testToggleEnabled!*Willow/Bootstrap/4/Tests!public! !
!BootstrapPopoverTest categoriesFor: #testUpdate!*Willow/Bootstrap/4/Tests!public! !

!BootstrapTooltipTest methodsFor!

testBoundary	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip boundary: #scrollParent ].	self		assert: html		equals:			'<div id="id1"></div><script type="text/javascript">$("#id1").tooltip({"boundary":"scrollParent"});</script>'!

testDisable	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip disable ].	self		assert: html		equals: '<div id="id1"></div><script type="text/javascript">$("#id1").tooltip("disable");</script>'!

testDispose	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip dispose ].	self		assert: html		equals: '<div id="id1"></div><script type="text/javascript">$("#id1").tooltip("dispose");</script>'!

testEnable	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip enable ].	self		assert: html		equals: '<div id="id1"></div><script type="text/javascript">$("#id1").tooltip("enable");</script>'!

testFallbackPlacement	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip fallbackPlacement: #flip ].	self		assert: html		equals:			'<div id="id1"></div><script type="text/javascript">$("#id1").tooltip({"fallbackPlacement":"flip"});</script>'!

testFallbackPlacementWithArray	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip fallbackPlacement: #(#flip #clockwise)].	self		assert: html		equals:			'<div id="id1"></div><script type="text/javascript">$("#id1").tooltip({"fallbackPlacement":["flip","clockwise"]});</script>'!

testOffset	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip offset: 1 ].	self		assert: html		equals: '<div id="id1"></div><script type="text/javascript">$("#id1").tooltip({"offset":1});</script>'!

testTemplateForBootstrap4	| html |	html := self		renderUsing: [ :canvas | 			| div tooltip |			div := canvas div.			tooltip := canvas jQuery new bootstrapTooltip.			tooltip				template: [ :template | 					template div						with: [ template div apply: [ :container | container addClass bootstrapCommon arrow ].							template div								with: 'Help!!'								applying: [ :container | container addClass bootstrapCommon tooltipInner ]							]						applying:							[ :container :constants | container addClass bootstrapCommon tooltip + ( container setARIARoleTo: #tooltip ) ]					].			div script: tooltip			].	self		assert: html		equals:			'<div id="id1"></div><script type="text/javascript">$("#id1").tooltip({"template":"<div class=\"tooltip\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\">Help!!</div></div>"});</script>'!

testToggleEnabled	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip toggleEnabled ].	self		assert: html		equals: '<div id="id1"></div><script type="text/javascript">$("#id1").tooltip("toggleEnabled");</script>'!

testUpdate	| html |	html := self renderTooltipContentApplying: [ :tooltip | tooltip update ].	self		assert: html		equals: '<div id="id1"></div><script type="text/javascript">$("#id1").tooltip("update");</script>'! !
!BootstrapTooltipTest categoriesFor: #testBoundary!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testDisable!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testDispose!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testEnable!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testFallbackPlacement!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testFallbackPlacementWithArray!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testOffset!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testTemplateForBootstrap4!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testToggleEnabled!*Willow/Bootstrap/4/Tests!public! !
!BootstrapTooltipTest categoriesFor: #testUpdate!*Willow/Bootstrap/4/Tests!public! !

"End of package definition"!

