"Filed out from Dolphin Smalltalk 7"!

WARenderingTest subclass: #BootstrapDropdownMenuBuilderTest
	instanceVariableNames: 'supplier'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BootstrapDropdownMenuBuilderTest guid: (GUID fromString: '{dfad89ca-8ad1-4fef-8beb-e2b3fed82e2e}')!
BootstrapDropdownMenuBuilderTest comment: 'A BootstrapDropdownMenuBuilderTest is a test class for testing the behavior of BootstrapDropdownMenuBuilder'!
!BootstrapDropdownMenuBuilderTest categoriesForClass!Willow-Bootstrap-Tests-WebViews! !
!BootstrapDropdownMenuBuilderTest methodsFor!

setUp	super setUp.	supplier := BootstrapComponentSupplier online!

testRenderContentOn	| menu html |	menu := supplier dropdownMenuBuilder		labeled: 'Dropdown';		addActionLabeled: 'Action' executing: [ :button | button onTrigger disable ];		addDivider;		addActionLabeled: 'Another action' executing: [ :button | button onTrigger disable ] applying: [ :button | button addClass willow ];		build.	html := self render: menu.	self		assert: html		equals:			'<div class="dropdown"><a id="a-id1" role="button" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown&nbsp;<span class="caret"></span></a><ul class="dropdown-menu"><li><a id="a-id2" role="button">Action</a></li><li class="divider" role="separator"></li><li><a id="a-id3" role="button" class="willow">Another action</a></li></ul></div><script type="text/javascript">$("#a-id1").click(function(event){arguments[0].preventDefault()});$("#a-id2").click(function(event){arguments[0].preventDefault();$(this).prop("disabled",true)});$("#a-id3").click(function(event){arguments[0].preventDefault();$(this).prop("disabled",true)});</script>'!

testRenderContentOnRightAligned	| menu html |	menu := supplier dropdownMenuBuilder		labeled: 'Dropdown';		addActionLabeled: 'Action' executing: [ :button | button onTrigger disable ];		beRightAligned;		build.	html := self render: menu.	self		assert: html		equals:			'<div class="dropdown"><a id="a-id1" role="button" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown&nbsp;<span class="caret"></span></a><ul class="dropdown-menu dropdown-menu-right"><li><a id="a-id2" role="button">Action</a></li></ul></div><script type="text/javascript">$("#a-id1").click(function(event){arguments[0].preventDefault()});$("#a-id2").click(function(event){arguments[0].preventDefault();$(this).prop("disabled",true)});</script>'!

testRenderContentOnWithButton	| menu html |	menu := supplier dropdownMenuBuilder		labeled: 'Dropdown' applying: [ :button | button addClass bootstrap buttonDefault ];		addActionLabeled: 'Action' executing: [ :button | button onTrigger disable ];		addDivider;		addActionLabeled: 'Another action' executing: [ :button | button onTrigger disable ];		build.	html := self render: menu.	self		assert: html		equals:			'<div class="dropdown"><button class="btn dropdown-toggle btn-default" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" type="button">Dropdown&nbsp;<span class="caret"></span></button><ul class="dropdown-menu"><li><a id="a-id1" role="button">Action</a></li><li class="divider" role="separator"></li><li><a id="a-id2" role="button">Another action</a></li></ul></div><script type="text/javascript">$("#a-id1").click(function(event){arguments[0].preventDefault();$(this).prop("disabled",true)});$("#a-id2").click(function(event){arguments[0].preventDefault();$(this).prop("disabled",true)});</script>'!

testRenderContentOnWithHeaders	| menu html |	menu := supplier dropdownMenuBuilder		labeled: 'Dropdown';		addHeaderLabeled: 'Dropdown header';		addActionLabeled: 'Action' executing: [ :button | button onTrigger disable ];		build.	html := self render: menu.	self		assert: html		equals:			'<div class="dropdown"><a id="a-id1" role="button" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown&nbsp;<span class="caret"></span></a><ul class="dropdown-menu"><li class="dropdown-header">Dropdown header</li><li><a id="a-id2" role="button">Action</a></li></ul></div><script type="text/javascript">$("#a-id1").click(function(event){arguments[0].preventDefault()});$("#a-id2").click(function(event){arguments[0].preventDefault();$(this).prop("disabled",true)});</script>'!

testRenderNavigationMenuContent	| navigationBar html |	navigationBar := [ :canvas | 	| menu list |	list := canvas unorderedList.	list apply: [ :theList | theList addClass bootstrap nav + theList addClass bootstrap navbarNavigation ].	menu := supplier dropdownMenuBuilder		beNavigationMenuIn: list;		labeled: 'Dropdown';		addActionLabeled: 'Action' executing: [ :button | button onTrigger disable ];		build.	list with: [ canvas render: menu ] ].	html := self render: navigationBar.	self		assert: html		equals:			'<ul class="nav navbar-nav"><li class="dropdown"><a id="a-id1" role="button" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown&nbsp;<span class="caret"></span></a><ul class="dropdown-menu"><li><a id="a-id2" role="button">Action</a></li></ul></li></ul><script type="text/javascript">$("#a-id1").click(function(event){arguments[0].preventDefault()});$("#a-id2").click(function(event){arguments[0].preventDefault();$(this).prop("disabled",true)});</script>'! !
!BootstrapDropdownMenuBuilderTest categoriesFor: #setUp!initialization!public! !
!BootstrapDropdownMenuBuilderTest categoriesFor: #testRenderContentOn!public!tests! !
!BootstrapDropdownMenuBuilderTest categoriesFor: #testRenderContentOnRightAligned!public!tests! !
!BootstrapDropdownMenuBuilderTest categoriesFor: #testRenderContentOnWithButton!public!tests! !
!BootstrapDropdownMenuBuilderTest categoriesFor: #testRenderContentOnWithHeaders!public!tests! !
!BootstrapDropdownMenuBuilderTest categoriesFor: #testRenderNavigationMenuContent!public!tests! !

